#!/usr/bin/env bash

cd /var/www/html

# Verificar estructura de directorios
echo "Verificando estructura de directorios..."
ls -la
echo "Directorio actual: $(pwd)"

# Verificar archivo artisan
if [ ! -f "/var/www/html/artisan" ]; then
    echo "ERROR: No se encuentra el archivo artisan"
    exit 1
else
    echo "Archivo artisan encontrado"
fi

# Instalar dependencias de Composer si no existen
if [ ! -d "/var/www/html/vendor" ]; then
    echo "Instalando dependencias de Composer..."
    composer install --no-interaction --optimize-autoloader
fi

# Generar clave de la aplicación si no existe
php artisan key:generate --force

# Configurar permisos correctos
chown -R sail:sail /var/www/html/storage /var/www/html/bootstrap/cache
chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache

# Ejecutar migraciones
echo "Ejecutando migraciones..."
php artisan migrate --force

# Optimizar aplicación
echo "Optimizando aplicación..."
php artisan config:cache
php artisan route:cache
php artisan view:cache

# Enlace simbólico para almacenamiento
echo "Creando enlace simbólico para almacenamiento..."
php artisan storage:link --force

# Asegurarse de que la variable PORT esté definida
if [ -z "$PORT" ]; then
    export PORT=8000
fi

echo "Iniciando aplicación en puerto $PORT..."
export SUPERVISOR_PHP_COMMAND="/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan serve --host=0.0.0.0 --port=$PORT"

# Iniciar supervisor
exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
